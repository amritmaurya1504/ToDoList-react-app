{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\Important\\\\react-tut\\\\awesomeapp\\\\src\\\\Slot.jsx\";\nimport React from 'react'; // import ReactDOM from 'react-dom';\n\nconst Slot = props => {\n  let {\n    x,\n    y,\n    z\n  } = props;\n\n  if (x == y && y == z) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slot_inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\" \", x, \" \", y, \" \", z, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This is Matching !!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slot_inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\" \", x, \" \", y, \" \", z, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This is Not Matching !!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n};\n\n_c = Slot;\nexport default Slot;\n\nvar _c;\n\n$RefreshReg$(_c, \"Slot\");","map":{"version":3,"sources":["E:/Important/react-tut/awesomeapp/src/Slot.jsx"],"names":["React","Slot","props","x","y","z"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAGA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACpB,MAAI;AAAEC,IAAAA,CAAF;AAAKC,IAAAA,CAAL;AAAQC,IAAAA;AAAR,MAAcH,KAAlB;;AAEA,MAAIC,CAAC,IAAIC,CAAL,IAAUA,CAAC,IAAIC,CAAnB,EAAsB;AAClB,wBACI;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAA,0BAAMF,CAAN,OAAUC,CAAV,OAAcC,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,qBADJ;AAQH,GATD,MASK;AACD,wBACI;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAA,0BAAMF,CAAN,OAAUC,CAAV,OAAcC,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,qBADJ;AAQH;AACJ,CAtBD;;KAAMJ,I;AAwBN,eAAeA,IAAf","sourcesContent":["import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\n\r\n\r\nconst Slot = (props) => {\r\n    let { x, y, z } = props;\r\n\r\n    if (x == y && y == z) {\r\n        return (\r\n            <>\r\n                <div className=\"slot_inner\">\r\n                    <h1> {x} {y} {z} </h1>\r\n                    <p>This is Matching !!</p>\r\n                </div>\r\n            </>\r\n        )\r\n    }else{\r\n        return (\r\n            <>\r\n                <div className=\"slot_inner\">\r\n                    <h1> {x} {y} {z} </h1>\r\n                    <p>This is Not Matching !!</p>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Slot;"]},"metadata":{},"sourceType":"module"}